#textdomain wesnoth-After_the_Storm

##
# Establishes a new timed unit respawn point. This can only be used in events.
#
# Example:
#   {TIMED_SPAWNER 4 (type=Shaxthal Assault Drone,Shaxthal Sentry Drone) 2 42 10}
#
# If you specify a comma-separated list of unit types in the UNIT_WML block, the spawn type
# will be randomized every cycle.
#
# A respawn interval of 0 turns will cause units to respawn immediately after being
# killed.
##
#define TIMED_SPAWNER _RESPAWN_TURNS _UNIT_WML _SIDE_NUMBER _X _Y
    {SPAWNER_BASE ({_RESPAWN_TURNS}) ({_UNIT_WML}) ({_SIDE_NUMBER}) ({_X}) ({_Y}) (yes)}
#enddef

##
# Establishes a new one-time respawn point. This can only be used in events.
#
# Example:
#   {ONETIME_SPAWNER (type=Shaxthal War Drone,Shaxthal Enforcer Drone) 5 31 42}
#
# If you specify a comma-separated list of unit types in the UNIT_WML block, the spawn type
# will be randomized every cycle.
##
#define ONETIME_SPAWNER _UNIT_WML _SIDE_NUMBER _X _Y
    {SPAWNER_BASE (0) ({_UNIT_WML}) ({_SIDE_NUMBER}) ({_X}) ({_Y}) (no)}
#enddef

##
# Specialized timed drone spawner using a special passive-aggressive AI behavior.
##
#define TIMED_DRONE_SPAWNER _RESPAWN_TURNS _UNIT_WML _SIDE_NUMBER _X _Y
    {SPAWNER_BASE ({_RESPAWN_TURNS}) (
        {_UNIT_WML}
        {DRONE_SPAWNER_AI ({_X}) ({_Y})}
    ) ({_SIDE_NUMBER}) ({_X}) ({_Y}) (yes)}
#enddef

##
# Specialized one-time drone spawner using a special passive-aggressive AI behavior.
##
#define ONETIME_DRONE_SPAWNER _UNIT_WML _SIDE_NUMBER _X _Y
    {SPAWNER_BASE (0) (
        {_UNIT_WML}
        {DRONE_SPAWNER_AI ({_X}) ({_Y})}
    ) ({_SIDE_NUMBER}) ({_X}) ({_Y}) (no)}
#enddef

##
# This is the main spawner logic. This macro must be present somewhere in the
# scenario at top level, preferably right before the first spawner macro inclusion.
#
# It is possible to disable all spawners in a scenario by setting the variable
# spawner_controller_enabled to a false boolean value. This is initially set to
# true.
##
#define SPAWN_CONTROLLER
    [event]
        name=prestart
        {VARIABLE spawner_controller_enabled yes}
    [/event]
    [event]
        name=victory
        {CLEAR_VARIABLE spawner_controller_enabled}
    [/event]
    [event]
        name=die
        first_time_only=no
        [filter_condition]
            {VARIABLE_BOOLEAN_EQUALS spawner_controller_enabled yes}
        [/filter_condition]
        [filter]
            [filter_wml]
                [variables]
                    spawner_respawn=yes
                [/variables]
            [/filter_wml]
        [/filter]

        # See lua/spawner.lua.
        [run_spawn_controller][/run_spawn_controller]
    [/event]
#enddef

##
# Implementation detail. Use TIMED_SPAWNER and ONE_TIME_SPAWNER instead.
##
#define SPAWNER_BASE _RESPAWN_TURNS _UNIT_WML _SIDE_NUMBER _X _Y _DO_RESPAWN
    [event]
        name="prestart,respawn:S{_SIDE_NUMBER}X{_X}Y{_Y}"
        first_time_only=no

        # See lua/spawner.lua.
        [spawner_spawn]
            {_UNIT_WML}

            side={_SIDE_NUMBER}
            x={_X}
            y={_Y}

            can_respawn={_DO_RESPAWN}
            respawn_turns={_RESPAWN_TURNS}
        [/spawner_spawn]
    [/event]
#enddef

##
# Implementation detail for TIMED_DRONE_SPAWNER and ONETIME_DRONE_SPAWNER.
##
#define DRONE_SPAWNER_AI _X _Y
    ai_special=guardian
    [ai]
        formula="{LD /ai/formulas/dark-hive-drone-guardian.formula}"
        [vars]
            #
            # TODO: Restore IftU's guard_radius randomization
            # (8..10 / 8..12 / 9..13)
            #
            guard_loc="loc({_X},{_Y})"
            guard_radius={DIFF 7 10 13}
        [/vars]
    [/ai]
#enddef

# kate: indent-mode normal; encoding utf-8; space-indent on;
