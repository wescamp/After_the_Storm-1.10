#textdomain wesnoth-After_the_Storm

# Following two specials close the [specials] tag and open it later to
# insert a weapon _weight value, eliminating the need to specify it manually
# within the unit's WML file. Therefore, they are intentionally unbalanced WML

# wmllint: match {WEAPON_SPECIAL_ATTACK_ONLY} with {SPECIAL_NOTES_ATTACK_ONLY}
# wmllint: unbalanced-on
#define WEAPON_SPECIAL_ATTACK_ONLY
    [damage]
        id=attack_only
        name= _ "attack only"
        name_inactive= _ "attack only"
        description= _ "Attack Only:
This weapon will never be used on defense."
        description_inactive= _ "Attack Only:
This weapon will never be used on defense."
        multiply=0
        active_on=defense
    [/damage]
# wmlindent: start ignoring
# wmlxgettext: [specials]
    [/specials]
    defense_weight=0
    [+specials]
# wmlxgettext: [/specials]
# wmlindent: stop ignoring
#enddef

# wmllint: match {WEAPON_SPECIAL_DEFEND_ONLY} with {SPECIAL_NOTES_DEFEND_ONLY}
#define WEAPON_SPECIAL_DEFEND_ONLY
    [damage]
        id=attack_only
        name= _ "defend only"
        name_inactive= _ "defend only"
        description= _ "Defend Only:
This weapon will only be available for defense."
        description_inactive= _ "Defend Only:
This weapon will only be available for defense."
        multiply=0
        active_on=offense
    [/damage]
# wmlindent: start ignoring
# wmlxgettext: [specials]
    [/specials]
    attack_weight=0
    [+specials]
# wmlxgettext: [/specials]
# wmlindent: stop ignoring
#enddef
# wmllint: unbalanced-off

#define WEAPON_SPECIAL_ALWAYS_HITS
    [chance_to_hit]
        id=always_hits
        name= _ "always hits"
        description= _ "Always Hits:
This attack always has a 100% chance to hit regardless of the defensive ability of the unit being attacked."
        value=100
        cumulative=no
    [/chance_to_hit]
#enddef

#
# The code for the Stun special is based on the UtBS implementation (as of 1.10),
# with various changes to account for AtS-specific concerns.
#

# wmllint: unbalanced-on
#define WEAPON_SPECIAL_STUN
    [dummy]
        id=stun
        name= _ "stun"
        description= _ "Stun:
This attack puts enormous pressure on the opponent, disrupting its zone of control if a hit is landed. Not active on defense."
    [/dummy]
    # wmlindent: start ignoring
    # wmlxgettext: [specials]
[/specials]
# wmlxgettext: [attack]
[/attack]
# wmlindent: stop ignoring
    [event]
        id=weapon_special_stun_attacker_hits
        name=attacker hits
        first_time_only=no
        [filter_attack]
            special=stun
        [/filter_attack]
        [filter_second]
            [not]
                level=0
                [or]
                    [filter_wml]
                        [status]
                            stunned=yes
                        [/status]
                    [/filter_wml]
                [/or]
            [/not]
        [/filter_second]

        [if]
            {VARIABLE_LEXICAL_EQUALS second_unit.gender female}
            [then]
                {VARIABLE temp_STUN_label _"female^stunned"}
            [/then]
            [else]
                {VARIABLE temp_STUN_label _"stunned"}
            [/else]
        [/if]

        [set_variables]
            name=second_unit.variables
            mode=merge
            [value]
                #
                # .ellipse and .zoc won't be reverted by the object's removal,
                # so that needs to be handled manually.
                #
                [stun_previous_state]
                    ellipse=$second_unit.ellipse
                    zoc=$second_unit.zoc
                [/stun_previous_state]
            [/value]
        [/set_variables]

        {VARIABLE second_unit.status.stunned yes}

        [unstore_unit]
            find_vacant=no
            variable=second_unit
            text=$temp_STUN_label
            red,green,blue=196,196,128
        [/unstore_unit]

        [object]
            silent=yes
            id=stun_effect_set
            duration=level
            [filter]
                x,y=$x2,$y2
            [/filter]
            [effect]
                apply_to=image_mod
                add="CS(50,50,0)"
            [/effect]
            [effect]
                apply_to=ellipse
                ellipse="misc/ellipse-nozoc"
            [/effect]
            [effect]
                apply_to=zoc
                value=no
            [/effect]
        [/object]

        {CLEAR_VARIABLE temp_STUN_label}
    [/event]
    [event]
        id=weapon_special_stun_turn_refresh
        name=turn refresh
        first_time_only=no

        [store_unit]
            [filter]
                side=$side_number
                [filter_wml]
                    [status]
                        stunned=yes
                    [/status]
                [/filter_wml]
            [/filter]
            variable=temp_STUN_restore_units_store
        [/store_unit]

        {FOREACH temp_STUN_restore_units_store temp_STUN_k}
            [set_variables]
                name="temp_STUN_restore_units_store[$temp_STUN_k]"
                mode=merge
                [value]
                    # FIXME: if the unit advanced in the meantime and the new unit type's
                    # ellipse and zoc don't match the backed up state, we're fucked.
                    ellipse=$temp_STUN_restore_units_store[$temp_STUN_k].variables.stun_previous_state.ellipse
                    zoc=$temp_STUN_restore_units_store[$temp_STUN_k].variables.stun_previous_state.zoc
                [/value]
            [/set_variables]

            {CLEAR_VARIABLE temp_STUN_restore_units_store[$temp_STUN_k].status.stunned}
            {CLEAR_VARIABLE temp_STUN_restore_units_store[$temp_STUN_k].variables.stun_previous_state}

            {FOREACH temp_STUN_restore_units_store[$temp_STUN_k].modifications.object temp_STUN_j}
                [if]
                    {VARIABLE_LEXICAL_EQUALS temp_STUN_restore_units_store[$temp_STUN_k].modifications.object[$temp_STUN_j].id stun_effect_set}
                    [then]
                        {CLEAR_VARIABLE temp_STUN_restore_units_store[$temp_STUN_k].modifications.object[$temp_STUN_j]}
                        # break out of the loop
                        {VARIABLE temp_STUN_j $temp_STUN_restore_units_store[$temp_STUN_k].modifications.object.length}
                    [/then]
                [/if]
            {NEXT temp_STUN_j}

            [unstore_unit]
                find_vacant=no
                variable="temp_STUN_restore_units_store[$temp_STUN_k]"
            [/unstore_unit]
        {NEXT temp_STUN_k}

        {CLEAR_VARIABLE temp_STUN_restore_units_store}
    [/event]
# wmlindent: start ignoring
[+attack]
    [+specials]
# wmlindent: stop ignoring
#enddef
# wmllint: unbalanced-off

# kate: indent-mode normal; encoding utf-8; space-indent on;
